openapi: 3.0.0
info:
  description: The Tateru Machine Service is a repository of machine metadata and manager routing information.
  version: 0.0.5
  title: Tateru Machine Service API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: inventory
    description: Inventory scanning
  - name: deploy
    description: Deployment operations
paths:
  /v1/machines:
    get:
      tags:
        - inventory
      summary: fetches all known machines
      operationId: fetchMachines
      description: |
        Returns all currently active machine objects.
      parameters:
        - name: alias
          in: query
          description: Filter on known aliases for machines (e.g. name)
          schema:
            type: string
      responses:
        '200':
          description: list of machine objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Machine'
  '/v1/machines/{uuid}':
    get:
      tags:
        - inventory
        - deploy
      summary: fetch a known machine
      operationId: fetchMachine
      description: |
        Returns one specific active machine object.
      parameters:
        - name: uuid
          in: path
          description: The machine UUID to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: list of machine objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Machine'
        '404':
          description: the requested machine was not found
  '/v1/machines/{uuid}/installer-callback':
    post:
      tags:
        - deploy
      summary: send an installation callback to notify Tateru that an installer has booted
      operationId: bootInstaller
      description: |
        When the Tateru installation software has booted it will call this endpoint to provide inventory
        and address to be reached at. It will be provided with an SSH public key to allow as response.
      parameters:
        - name: uuid
          in: path
          description: The machine UUID the installer is running on
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallbackRequest'
      responses:
        '200':
          description: the request succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallbackResponse'
        '404':
          description: the requested machine was not found
components:
  schemas:
    Machine:
      type: object
      required:
        - uuid
      properties:
        uuid:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        serialNumber:
          type: string
          example: XYZ1234
        assetTag:
          type: string
          example: '00203'
        name:
          type: string
          example: VMLNX01
        managedBy:
          type: string
          description: URL of the manager that is the source of this machine record
          example: 'http://tateru-vsphere.corp.local:7707/'
        installerAddress:
          type: string
          description: Address of the installer if known (populated by installer-callback)
          example: '2001:db8::1234'
        sshPorts:
          $ref: '#/components/schemas/SSHPorts'
    SSHPorts:
      type: object
      required:
        - installer
      properties:
        installer:
          type: integer
          minimum: 1
          maximum: 65535
          example: 22
    CallbackRequest:
      type: object
      properties:
        serialNumber:
          type: string
          example: XYZ1234
        assetTag:
          type: string
          example: '00203'
        sshPorts:
          $ref: '#/components/schemas/SSHPorts'
      required:
        - sshPorts
    CallbackResponse:
      type: object
      required:
        - ssh_pub_key
      properties:
        ssh_pub_key:
          type: string
          example: 'ssh-ed25519 AAA[..]AAV user@laptop'
